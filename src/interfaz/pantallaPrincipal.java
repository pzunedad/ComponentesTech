/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaz;

import clases.Compra;
import clases.Pago;
import clases.Producto;
import clases.pagoTarjeta;
import java.awt.Window;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.text.BadLocationException;
import clases.carritoCompra;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author pablo
 */
public class pantallaPrincipal extends javax.swing.JFrame {

    private List<Producto> listaProductos;
    private List<Producto> productosEnCarrito = new ArrayList<>();

    /**
     * Constructor de la clase pantallaPrincipal.
     */
    public pantallaPrincipal() {
        initComponents();
        inicializarProductos();
    }

    /**
     * Inicializa la lista de productos con algunos productos de ejemplo.
     */
    private void inicializarProductos() {
        listaProductos = new ArrayList<>();
        listaProductos.add(new Producto("PC Premontado A", 899.99, 10, "PC completo con características avanzadas", "PC Premontado"));
        listaProductos.add(new Producto("PC Premontado B", 599.99, 30, "PC completo con caracteristicas avanzadas", "PC Premontado"));
        listaProductos.add(new Producto("Tarjeta Gráfica", 349.99, 20, "Tarjeta gráfica de última generación para gaming", "Piezas"));
        listaProductos.add(new Producto("Procesador de Alta Gama", 499.99, 15, "Procesador potente para rendimiento excepcional", "Piezas"));
        listaProductos.add(new Producto("Memoria RAM 16GB", 79.99, 40, "Módulos de memoria RAM DDR4 de 16GB para mejorar el rendimiento", "Piezas"));
        listaProductos.add(new Producto("SSD 1TB", 129.99, 12, "Unidad de estado sólido de 1TB para almacenamiento rápido", "Piezas"));
        listaProductos.add(new Producto("Placa Base ATX", 179.99, 15, "Placa base compatible con procesadores de última generación", "Piezas"));
        listaProductos.add(new Producto("Refrigeración líquida para CPU", 129.99, 10, "Sistema de enfriamiento líquido para mantener la temperatura óptima del procesador", "Piezas"));
        listaProductos.add(new Producto("Fuente de Alimentación 750W", 99.99, 20, "Fuente de alimentación con capacidad suficiente para sistemas de alto rendimiento", "Piezas"));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnBuscar = new javax.swing.JButton();
        btnUsuario = new javax.swing.JButton();
        btnCarrito = new javax.swing.JButton();
        Logo = new javax.swing.JLabel();
        productosVendidos = new javax.swing.JLabel();
        TelefonoContacto = new javax.swing.JLabel();
        PCPremontadoFOTO = new javax.swing.JLabel();
        PCPremontado2Foto = new javax.swing.JLabel();
        FotoPieza1 = new javax.swing.JLabel();
        FotoPieza2 = new javax.swing.JLabel();
        Buscador = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        btnX = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(252, 252, 239));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnUsuario.setText("Usuario");
        btnUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuarioActionPerformed(evt);
            }
        });

        btnCarrito.setText("Ver carrito");
        btnCarrito.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnCarritoMousePressed(evt);
            }
        });

        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fotos/logoblanco40 (1).jpg"))); // NOI18N

        productosVendidos.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        productosVendidos.setText("Productos mas vendidos");

        TelefonoContacto.setText("Teléfono Contacto : 654021429");

        PCPremontadoFOTO.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fotos/1719-forgeon-khaydarin-argb-mesh.png"))); // NOI18N
        PCPremontadoFOTO.setPreferredSize(new java.awt.Dimension(50, 50));

        PCPremontado2Foto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fotos/1906-tempest-shade-rgb-torre-atx.png"))); // NOI18N

        FotoPieza1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fotos/MSI GeForce RTX 4080 VENTUS 3X E.png"))); // NOI18N

        FotoPieza2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fotos/Procesador Intel Core i7 (1).png"))); // NOI18N

        Buscador.setBorder(null);
        Buscador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BuscadorMousePressed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        btnX.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnX.setText("X");
        btnX.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnX.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnXMousePressed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fotos/1813-mars-gaming-mcpu-xt-argb-ve.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fotos/Corsair Vengeance RGB DDR5 6000M.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TelefonoContacto)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PCPremontado2Foto, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PCPremontadoFOTO, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(90, 90, 90)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(FotoPieza1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(FotoPieza2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(393, 393, 393)
                        .addComponent(productosVendidos)))
                .addGap(99, 99, 99))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(Logo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(249, 249, 249)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Buscador, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscar)))
                        .addContainerGap(272, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCarrito, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(btnX, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCarrito)
                            .addComponent(btnUsuario)
                            .addComponent(btnX))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Buscador, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Logo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(productosVendidos)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(FotoPieza1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PCPremontadoFOTO, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FotoPieza2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PCPremontado2Foto, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41)
                .addComponent(TelefonoContacto)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String palabraClave = Buscador.getText().trim();

        if (!palabraClave.isEmpty()) {
            buscarProducto(palabraClave);
        } else {
            JOptionPane.showMessageDialog(null, "Ingresa una palabra clave para buscar.");
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuarioActionPerformed
        this.dispose();
        InicioSesion iniciosesion = new InicioSesion();
        iniciosesion.setVisible(true);
    }//GEN-LAST:event_btnUsuarioActionPerformed

    private void btnCarritoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCarritoMousePressed
        mostrarVentanaCarrito();
    }//GEN-LAST:event_btnCarritoMousePressed

    private void BuscadorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BuscadorMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BuscadorMousePressed

    private void btnXMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXMousePressed
        System.exit(0);
    }//GEN-LAST:event_btnXMousePressed

    //Funciones para hacer funcional el buscador
    /**
     * Realiza la búsqueda de productos por palabra clave y muestra los
     * resultados.
     *
     * @param palabraClave La palabra clave para buscar productos.
     */
    private void buscarProducto(String palabraClave) {
        List<Producto> productosEncontrados = new ArrayList<>();

        for (Producto producto : listaProductos) {
            if (producto.buscarPorPalabra(palabraClave)) {
                productosEncontrados.add(producto);
            }
        }

        if (!productosEncontrados.isEmpty()) {

            mostrarResultadosBusqueda(productosEncontrados);

        } else {
            JOptionPane.showMessageDialog(null, "No hay productos que coincidan con la palabra clave: " + palabraClave);
        }
    }

    /**
     * Muestra los resultados de la búsqueda en una nueva ventana.
     *
     * @param productosEncontrados La lista de productos encontrados.
     */
    private void mostrarResultadosBusqueda(List<Producto> productosEncontrados) {
        // Crear un JTextArea para mostrar solo los nombres de los productos
        JTextArea textArea = new JTextArea();
        textArea.setEditable(false);
        textArea.setRows(10);

        // Agregar solo los nombres de los productos al JTextArea
        for (Producto producto : productosEncontrados) {
            textArea.append(producto.getNombre() + "\n");
        }

        // Crear un JScrollPane para manejar el desplazamiento si hay muchos resultados
        JScrollPane scrollPane = new JScrollPane(textArea);
        scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        // Manejar eventos de clic en el JTextArea
        textArea.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int offset = textArea.viewToModel(e.getPoint());
                try {
                    int rowStart = textArea.getLineStartOffset(textArea.getLineOfOffset(offset));
                    int rowEnd = textArea.getLineEndOffset(textArea.getLineOfOffset(offset));

                    // Obtener el nombre del producto seleccionado
                    String nombreProductoSeleccionado = textArea.getText().substring(rowStart, rowEnd).trim();

                    // Buscar el producto correspondiente
                    Producto productoSeleccionado = null;
                    for (Producto producto : productosEncontrados) {
                        if (producto.getNombre().equals(nombreProductoSeleccionado)) {
                            productoSeleccionado = producto;
                            break;
                        }
                    }

                    if (productoSeleccionado != null) {
                        // Mostrar detalles del producto
                        DesProductos desProductos = new DesProductos();
                        desProductos.setProductoSeleccionado(productoSeleccionado);
                        desProductos.setVisible(true);

                        //Cerrar buscador
                        ((Window) SwingUtilities.getWindowAncestor(textArea)).dispose();

                    }
                } catch (BadLocationException ex) {
                    ex.printStackTrace();
                }
            }
        });

        // Mostrar la información en el centro de la pantalla usando JOptionPane
        JOptionPane.showMessageDialog(
                this,
                scrollPane,
                "Resultados de Búsqueda",
                JOptionPane.PLAIN_MESSAGE
        );
    }

    //Funciones para el carritoCompra y comprar(Productos que estan en la pantalla principal)
    /**
     * Método para realizar la compra utilizando el carrito de compras y un
     * método de pago.
     */
    private void realizarCompra() {

        // Pide al usuario seleccionar un método de pago
        String[] opcionesPago = {"Tarjeta de Crédito"};
        String metodoPagoSeleccionado = (String) JOptionPane.showInputDialog(
                null,
                "Seleccione un método de pago:",
                "Método de Pago",
                JOptionPane.QUESTION_MESSAGE,
                null,
                opcionesPago,
                opcionesPago[0]);

        // Procesa el pago según el método seleccionado
        Pago metodoPago;
        switch (metodoPagoSeleccionado) {
            case "Tarjeta de Crédito":
                metodoPago = obtenerDatosPagoTarjeta();
                break;

            default:
                JOptionPane.showMessageDialog(null, "Método de pago no válido.");
                return;
        }

        // Completa la compra utilizando el carrito y el método de pago seleccionado
        Compra compra = new Compra();
        compra.completarCompra(new carritoCompra(), metodoPago);

        // Limpia el carrito después de la compra
        productosEnCarrito.clear();

        // Muestra un mensaje indicando que la compra fue exitosa
        JOptionPane.showMessageDialog(null, "Compra realizada exitosamente.");
    }

    /**
     * Método para obtener los datos de la tarjeta de crédito.
     *
     * @return Una instancia de pagoTarjeta con los datos de la tarjeta.
     */
    private Pago obtenerDatosPagoTarjeta() {
        // Pide al usuario ingresar los datos de la tarjeta
        String numeroTarjeta = JOptionPane.showInputDialog("Ingrese el número de la tarjeta de crédito:");
        String fechaVencimiento = JOptionPane.showInputDialog("Ingrese la fecha de vencimiento (MM/YY):");
        String codigoSeguridadStr = JOptionPane.showInputDialog("Ingrese el código de seguridad:");

        int codigoSeguridad = 0;
        try {
            codigoSeguridad = Integer.parseInt(codigoSeguridadStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error: El código de seguridad debe ser un número entero.");
        }

        return new pagoTarjeta(numeroTarjeta, fechaVencimiento, codigoSeguridad);
    }

    /**
     * Muestra una ventana con el contenido del carrito de compras.
     */
    private void mostrarVentanaCarrito() {
        JFrame ventanaCarrito = new JFrame("Carrito de Compra");
        ventanaCarrito.setSize(400, 300);
        ventanaCarrito.setLayout(new BorderLayout());

        JPanel panelProductos = new JPanel();
        panelProductos.setLayout(new BoxLayout(panelProductos, BoxLayout.Y_AXIS));

        // Mostrar los productos del carrito directamente en la ventana emergente
        for (Producto producto : productosEnCarrito) {
            // Etiqueta para mostrar el nombre y la cantidad del producto
            JLabel lblProducto = new JLabel(producto.getNombre() + " - Precio: " + producto.getPrecio());

            // Panel para organizar la etiqueta del producto y los botones de añadir y eliminar
            JPanel panelProducto = new JPanel(new BorderLayout());
            panelProducto.add(lblProducto, BorderLayout.CENTER);

            // Botón para decrementar la cantidad del producto en el carrito
            JButton btnEliminar = new JButton("-");
            btnEliminar.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    quitarDelCarrito(producto);
                    ventanaCarrito.dispose();
                    mostrarVentanaCarrito();
                }
            });
            panelProducto.add(btnEliminar, BorderLayout.EAST);

            panelProductos.add(panelProducto);
        }

        // Botón de compra en la parte inferior
        JButton btnRealizarCompra = new JButton("Realizar Compra");
        btnRealizarCompra.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Lógica para realizar la compra con los productos en el carrito
                // Verifica si hay productos en el carrito
                if (productosEnCarrito.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "El carrito de compras está vacío. Agregue productos antes de comprar.");
                    return;
                } else {
                    realizarCompra();
                    ventanaCarrito.dispose();
                }
            }
        });
        JPanel panelBotones = new JPanel(new FlowLayout(FlowLayout.RIGHT));
        panelBotones.add(btnRealizarCompra);

        ventanaCarrito.add(panelBotones, BorderLayout.SOUTH);
        ventanaCarrito.add(panelProductos, BorderLayout.CENTER);
        ventanaCarrito.setVisible(true);
    }

    /**
     * Quita un producto del carrito.
     *
     * @param producto El producto a quitar del carrito.
     */
    private void quitarDelCarrito(Producto producto) {
        productosEnCarrito.remove(producto);
        JOptionPane.showMessageDialog(null, "Producto eliminado del carrito: " + producto.getNombre());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pantallaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Buscador;
    private javax.swing.JLabel FotoPieza1;
    private javax.swing.JLabel FotoPieza2;
    private javax.swing.JLabel Logo;
    private javax.swing.JLabel PCPremontado2Foto;
    private javax.swing.JLabel PCPremontadoFOTO;
    private javax.swing.JLabel TelefonoContacto;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCarrito;
    private javax.swing.JButton btnUsuario;
    private javax.swing.JButton btnX;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel productosVendidos;
    // End of variables declaration//GEN-END:variables

    void setvisible(boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
